services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: target
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=source
      - MONGO_INITDB_ROOT_USERNAME=mongouser
      - MONGO_INITDB_ROOT_PASSWORD=mongopasswd
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    ports:
      - '27017:27017'
    volumes:
      - mongodata:/data/db

  mongo-generator:
    build: ./generator
    container_name: mongo-generator
    depends_on:
      mongo:
        condition: service_healthy
    command: ["python", "gen.py"]

  airflow-init:
    image: apache/airflow:2.6.2
    container_name: airflow-init
    build: ./airflow
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: bash -c "airflow db init && airflow db upgrade &&
       airflow users create \
       --username admin \
       --firstname Admin \
       --lastname User \
       --role Admin \
       --email admin@example.com \
       --password admin && 
       aifrlow connections add 'mongo' \
       --conn-type 'mongo' \
       --conn-host 'mongo' \
       --conn-schema 'source' \
       --conn-login 'mongouser' \
       --conn-password 'mongopasswd' \
       --conn-port '27017' 
       --conn-extra '${MONGO_EXTRA_CONN}' &&
       airflow connections add 'postgres' \
       --conn-type 'postgres' \
       --conn-host 'postgres' \
       --conn-schema 'target' \
       --conn-login 'airflow' \
       --conn-password 'airflow' \
       --conn-port '5432'"

  airflow-webserver:
    image: apache/airflow:2.6.2
    container_name: airflow-webserver
    build: ./airflow
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.6.2
    container_name: airflow-scheduler
    build: ./airflow
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: scheduler

volumes:
  pgdata:
  mongodata: